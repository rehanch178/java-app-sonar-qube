name: Java CI with SonarCloud

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test & SonarCloud Analysis
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for SonarCloud analysis

      # Step 2: Set up Java 17
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # Step 3: Cache Maven Dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}

      # Step 4: Build and Run Tests with JaCoCo for Code Coverage
      - name: Build and Run Tests
        run: mvn clean verify
        continue-on-error: false
        working-directory: ./sonar-java-project  # Change this to your project folder

      # Step 5: Run SonarCloud Analysis
      - name: Run SonarCloud Analysis
        run: |
          mvn sonar:sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=rehanch178 \
          -Dsonar.projectKey=rehanch178_java-app-sonar-qube \
          -Dsonar.branch.name=main \
          -Dsonar.projectVersion=1.0 \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.exclusions="src/test/java/**" \
          -Dsonar.token="${{ secrets.SONAR_TOKEN }}"
        working-directory: ./sonar-java-project  # Run Sonar in correct directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      # Step 6: Wait for SonarCloud Quality Gate Result
      - name: Check SonarCloud Quality Gate
        run: |
          SONAR_STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=rehanch178_java-app-sonar-qube" | jq -r .projectStatus.status)
          echo "SonarCloud Quality Gate Status: $SONAR_STATUS"
          echo "SonarCloud Report: https://sonarcloud.io/project/overview?id=rehanch178_java-app-sonar-qube"
          if [[ "$SONAR_STATUS" != "OK" ]]; then
            echo "‚ùå Quality gate failed! Failing the job."
            exit 1
          fi